<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>rce - Tag - emdwyer</title><link>https://emdwyer.github.io/tags/rce/</link><description>rce - Tag - emdwyer</description><generator>Hugo -- gohugo.io</generator><language>en</language><managingEditor>hello@emdwyer.dev (emdwyer)</managingEditor><webMaster>hello@emdwyer.dev (emdwyer)</webMaster><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Sat, 13 May 2023 00:00:00 +1000</lastBuildDate><atom:link href="https://emdwyer.github.io/tags/rce/" rel="self" type="application/rss+xml"/><item><title>Interface HTB Walkthrough</title><link>https://emdwyer.github.io/2023-05-13-interface-htb/</link><pubDate>Sat, 13 May 2023 00:00:00 +1000</pubDate><author>emdwyer</author><guid>https://emdwyer.github.io/2023-05-13-interface-htb/</guid><description>Introduction After some tricky enumeration where I initially miss the obvious, we find and fuzz an API endpoint which converts HTML input to PDF. Looking at the resulting PDF with exiftool, we find dompdf 1.2.0 is used. This is vulnerable to injecting arbitrary PHP into a font file, which the server will execute once included in a stylesheet. Knowing this, we serve up a style sheet, TTF font containing malicious PHP and pass a reference to our stylesheet to the vulnerable API point.</description></item></channel></rss>