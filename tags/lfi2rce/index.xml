<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>lfi2rce - Tag - emdwyer</title><link>https://emdwyer.github.io/tags/lfi2rce/</link><description>lfi2rce - Tag - emdwyer</description><generator>Hugo -- gohugo.io</generator><language>en</language><managingEditor>hello@emdwyer.dev (emdwyer)</managingEditor><webMaster>hello@emdwyer.dev (emdwyer)</webMaster><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Sat, 15 Apr 2023 00:00:00 +1000</lastBuildDate><atom:link href="https://emdwyer.github.io/tags/lfi2rce/" rel="self" type="application/rss+xml"/><item><title>Encoding HTB Walkthrough</title><link>https://emdwyer.github.io/2023-04-15-encoding-htb/</link><pubDate>Sat, 15 Apr 2023 00:00:00 +1000</pubDate><author>emdwyer</author><guid>https://emdwyer.github.io/2023-04-15-encoding-htb/</guid><description>Introduction Another exploitable PHP web app that focuses on character conversions. We leverage Local File Inclusion (LFI) to further enumerate the system by looking at Apache config files and PHP source. With some sleuthing, we find work-in-progress code in a git repository &amp;ndash; finding the path to a vulnerable looking PHP script. Knowing this path is only accessible to localhost, we trace back through an existing LFI and use domain confusion in order to perform Server Side Request Forgery.</description></item></channel></rss>